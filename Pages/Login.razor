@page "/"
@using BlazorDex.Models
@using BlazorDex.Util
@using System.Text.Json
@using System.Text
@inject HeroStateService HeroStateService
@inject HeroClient HeroClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using System.ComponentModel.DataAnnotations

<EditForm Model="loginRequest" OnValidSubmit="FetchOrCreateHero">
    <div class="flex flex-col justify-center items-center min-h-screen bg-cover bg-center px-2">
        <div class="rounded-lg shadow-lg p-8 max-w-md w-full " style="background-color: rgba(255, 249, 249, 0.1);">
            <h2 class="text-5xl font-extrabold text-yellow-500 text-center uppercase mb-8 tracking-wide">Kreshnik</h2>
            
            <div class="w-full text-sm">
                <DataAnnotationsValidator />
                <ValidationSummary />
            </div>

            <div class="mb-8">
                <div class="mb-6">
                    <label for="playerName" class="block font-semibold text-gray-300 uppercase tracking-wider my-2">Name:</label>
                    <InputText id="playerName" @bind-Value="loginRequest.PlayerName" class="w-full px-4 py-3 rounded-lg  border-yellow-500 bg-transparent text-yellow-100 placeholder-gray-400 focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-transparent transition" placeholder="Enter your name" />
                </div>
                
                <div class="mb-6">
                    <label for="password" class="block font-semibold text-gray-300 uppercase tracking-wider my-2">Password:</label>
                    <InputText id="password" @bind-Value="loginRequest.Password" type="password" class="w-full px-4 py-3  rounded-lg  border-yellow-500 bg-transparent text-yellow-100 placeholder-gray-400 focus:outline-none focus:ring-1 focus:ring-yellow-500 focus:border-transparent transition" placeholder="Enter your password" />
                </div>
            </div>

            <div class="flex justify-center items-center">
                <button type="submit" class=" w-1/2 bg-yellow-500 hover:bg-yellow-600 text-yellow-100 font-bold py-3 px-4 uppercase rounded-lg transition transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-yellow-700">
                    Start
                </button>
            </div>

            @if (errorMessage != null)
            {
                <p class="text-red-600 mt-6 text-center uppercase">@errorMessage</p>
            }
        </div>
    </div>
</EditForm>

@code {
    private HeroLoginRequest loginRequest = new HeroLoginRequest();
    private string? errorMessage;

    private async Task FetchOrCreateHero()
    {
        errorMessage = null;

        try
        {
            var requestContent = new StringContent(JsonSerializer.Serialize(loginRequest), Encoding.UTF8, "application/json");
            var response = await HeroClient.Client.PostAsync("https://backend.momotech.al/api/heroes/fetchorcreate", requestContent);

            if (!response.IsSuccessStatusCode)
            {
                throw new Exception("Incorrect password");
            }

            var heroJson = await response.Content.ReadAsStringAsync();
            var hero = JsonSerializer.Deserialize<Hero>(heroJson, new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase
            });

            if (hero == null)
                return;

            HeroStateService.SetHero(hero);
            NavigationManager.NavigateTo("/game");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
